{"ast":null,"code":"var _jsxFileName = \"/Users/mariusiulianmoraru/taskify/client/src/components/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\nimport '../Login/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate for navigation\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError('All fields are required');\n      return;\n    }\n    setLoading(true); // Show loading indicator\n\n    try {\n      const response = await fetch('http://localhost:3001/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Login successful\n        console.log('Login successful:', data);\n        setError('');\n        navigate('/task-list'); // Redirect to TaskList route\n      } else {\n        // Handle errors\n        setError(data.message || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          autoComplete: \"off\",\n          placeholder: \"Enter Email\",\n          className: \"form-control\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          className: \"form-control\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-link\",\n      children: [\"Not registered yet? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"6HSgh3QiCvfUxk6eI7OKYEV0xmQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","message","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","autoComplete","placeholder","className","value","onChange","target","disabled","to","_c","$RefreshReg$"],"sources":["/Users/mariusiulianmoraru/taskify/client/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\nimport '../Login/Login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate(); // Initialize useNavigate for navigation\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      setError('All fields are required');\n      return;\n    }\n\n    setLoading(true); // Show loading indicator\n\n    try {\n      const response = await fetch('http://localhost:3001/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Login successful\n        console.log('Login successful:', data);\n        setError('');\n        navigate('/task-list'); // Redirect to TaskList route\n      } else {\n        // Handle errors\n        setError(data.message || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n\n  return (\n    <div id=\"login-cont\">\n      <h2>Login Page</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"off\"\n            placeholder=\"Enter Email\"\n            className=\"form-control\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter Password\"\n            className=\"form-control\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-success\" disabled={loading}>\n          {loading ? 'Loading...' : 'Submit'}\n        </button>\n        {error && <p className=\"error\">{error}</p>}\n      </form>\n      <p className=\"register-link\">\n        Not registered yet? <Link to=\"/register\">Register here</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}