{"ast":null,"code":"var _jsxFileName = \"/Users/mariusiulianmoraru/taskify/client/src/pages/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport './CSS/Homepage.css'; // Add styles for the dashboard layout\nimport CreateTask from '../components/CreateTask/CreateTask';\nimport TaskList from '../components/TaskList/TaskList';\nimport Archive from '../components/Archive/Archive';\nimport { AuthContext } from '../context/AuthContext'; // Assuming you have AuthContext\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Homepage() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get the user from AuthContext\n  const [activeSection, setActiveSection] = useState('dashboard'); // Manage active section\n  const [isCreateTaskOpen, setIsCreateTaskOpen] = useState(false); // Track Create Task modal visibility\n  const [tasks, setTasks] = useState([]); // Store tasks in state\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setTasks(response.data.filter(task => !task.archived)); // Exclude archived tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Define the onSubmit function for CreateTask\n  const handleTaskSubmit = async taskData => {\n    try {\n      console.log('Task Submitted:', taskData);\n      const response = await axios.post('http://localhost:3001/api/tasks', taskData);\n      if (response.status === 201) {\n        console.log('Task created:', response.data);\n        fetchTasks(); // Refresh the task list\n        setIsCreateTaskOpen(false); // Close Create Task modal\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error creating task:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message); // Improved logging\n    }\n  };\n\n  // Define the onClose function for CreateTask\n  const handleCloseCreateTask = () => {\n    setIsCreateTaskOpen(false); // Close the Create Task modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hello,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [user ? user.firstame : 'Guest', \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `widget ${activeSection === 'tasks' ? 'active' : ''}`,\n        onClick: () => {\n          setActiveSection('tasks');\n          fetchTasks(); // Fetch tasks when navigating to the TaskList\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"View and manage your tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget add-task-widget\",\n        onClick: () => setIsCreateTaskOpen(true) // Open the Create Task modal\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"add-symbol\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), \" Create Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add new tasks to your list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `widget ${activeSection === 'archive' ? 'active' : ''}`,\n        onClick: () => setActiveSection('archive'),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Access archived tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [activeSection === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to the Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here you can manage all your tasks effectively.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeSection === 'tasks' && /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        fetchTasks: fetchTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 39\n      }, this), activeSection === 'archive' && /*#__PURE__*/_jsxDEV(Archive, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isCreateTaskOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n          onSubmit: handleTaskSubmit,\n          onClose: handleCloseCreateTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Homepage, \"vLhKwxPr1AgbT2MEr7+YZ9EzB50=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useContext","axios","CreateTask","TaskList","Archive","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","user","activeSection","setActiveSection","isCreateTaskOpen","setIsCreateTaskOpen","tasks","setTasks","fetchTasks","response","get","data","filter","task","archived","error","console","handleTaskSubmit","taskData","log","post","status","_error$response","message","handleCloseCreateTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","firstame","onClick","onSubmit","onClose","_c","$RefreshReg$"],"sources":["/Users/mariusiulianmoraru/taskify/client/src/pages/Homepage.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport './CSS/Homepage.css'; // Add styles for the dashboard layout\nimport CreateTask from '../components/CreateTask/CreateTask';\nimport TaskList from '../components/TaskList/TaskList';\nimport Archive from '../components/Archive/Archive';\nimport { AuthContext } from '../context/AuthContext'; // Assuming you have AuthContext\n\nfunction Homepage() {\n  const { user } = useContext(AuthContext); // Get the user from AuthContext\n  const [activeSection, setActiveSection] = useState('dashboard'); // Manage active section\n  const [isCreateTaskOpen, setIsCreateTaskOpen] = useState(false); // Track Create Task modal visibility\n  const [tasks, setTasks] = useState([]); // Store tasks in state\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setTasks(response.data.filter((task) => !task.archived)); // Exclude archived tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Define the onSubmit function for CreateTask\n  const handleTaskSubmit = async (taskData) => {\n    try {\n      console.log('Task Submitted:', taskData);\n\n      const response = await axios.post('http://localhost:3001/api/tasks', taskData);\n\n      if (response.status === 201) {\n        console.log('Task created:', response.data);\n        fetchTasks(); // Refresh the task list\n        setIsCreateTaskOpen(false); // Close Create Task modal\n      }\n    } catch (error) {\n      console.error('Error creating task:', error.response?.data || error.message); // Improved logging\n    }\n  };\n\n  // Define the onClose function for CreateTask\n  const handleCloseCreateTask = () => {\n    setIsCreateTaskOpen(false); // Close the Create Task modal\n  };\n\n  return (\n    <div className=\"homepage-container\">\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        {/* User Section */}\n        <div className=\"user-section\">\n          <p>Hello,</p>\n          <p><strong>{user ? user.firstame : 'Guest'}!</strong></p>\n        </div>\n\n        <div\n          className={`widget ${activeSection === 'tasks' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveSection('tasks');\n            fetchTasks(); // Fetch tasks when navigating to the TaskList\n          }}\n        >\n          <h3>Tasks</h3>\n          <p>View and manage your tasks.</p>\n        </div>\n        <div\n          className=\"widget add-task-widget\"\n          onClick={() => setIsCreateTaskOpen(true)} // Open the Create Task modal\n        >\n          <h3>\n            <span className=\"add-symbol\">+</span> Create Task\n          </h3>\n          <p>Add new tasks to your list.</p>\n        </div>\n        <div\n          className={`widget ${activeSection === 'archive' ? 'active' : ''}`}\n          onClick={() => setActiveSection('archive')}\n        >\n          <h3>Archive</h3>\n          <p>Access archived tasks.</p>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {activeSection === 'dashboard' && (\n          <>\n            <h1>Welcome to the Dashboard</h1>\n            <p>Here you can manage all your tasks effectively.</p>\n          </>\n        )}\n        {activeSection === 'tasks' && <TaskList tasks={tasks} fetchTasks={fetchTasks} />}\n        {activeSection === 'archive' && <Archive />}\n      </div>\n\n      {/* Create Task Modal */}\n      {isCreateTaskOpen && (\n        <div className=\"popup-overlay\">\n          <div className=\"popup-content\">\n            <h3>Create a New Task</h3>\n            <CreateTask\n              onSubmit={handleTaskSubmit}\n              onClose={handleCloseCreateTask}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Homepage;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}