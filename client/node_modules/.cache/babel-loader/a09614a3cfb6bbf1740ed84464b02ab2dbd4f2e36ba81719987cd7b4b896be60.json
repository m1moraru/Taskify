{"ast":null,"code":"var _jsxFileName = \"/Users/mariusiulianmoraru/taskify/client/src/components/Archive/Archive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  // Fetch archived tasks\n  useEffect(() => {\n    fetchArchivedTasks();\n  }, []);\n  const fetchArchivedTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setArchivedTasks(response.data.filter(task => task.archived)); // Filter archived tasks\n    } catch (error) {\n      console.error('Error fetching archived tasks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Archived Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: archivedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Priority: \", task.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", task.deadline || 'No deadline set']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Archive, \"aV1zGF87olE3OoEA1R6BY1rJubY=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Archive","_s","archivedTasks","setArchivedTasks","fetchArchivedTasks","response","get","data","filter","task","archived","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","priority","status","deadline","id","_c","$RefreshReg$"],"sources":["/Users/mariusiulianmoraru/taskify/client/src/components/Archive/Archive.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ''\n\nfunction Archive() {\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  // Fetch archived tasks\n  useEffect(() => {\n    fetchArchivedTasks();\n  }, []);\n\n  const fetchArchivedTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setArchivedTasks(response.data.filter((task) => task.archived)); // Filter archived tasks\n    } catch (error) {\n      console.error('Error fetching archived tasks:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Archived Tasks</h2>\n      <ul>\n        {archivedTasks.map((task) => (\n          <li key={task.id}>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n            <p>Priority: {task.priority}</p>\n            <p>Status: {task.status}</p>\n            <p>Deadline: {task.deadline || 'No deadline set'}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Archive;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,EAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAET,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdQ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;MACnEH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,EACGX,aAAa,CAACgB,GAAG,CAAET,IAAI,iBACtBV,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAKJ,IAAI,CAACU;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBlB,OAAA;UAAAc,QAAA,EAAIJ,IAAI,CAACW;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBlB,OAAA;UAAAc,QAAA,GAAG,YAAU,EAACJ,IAAI,CAACY,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChClB,OAAA;UAAAc,QAAA,GAAG,UAAQ,EAACJ,IAAI,CAACa,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BlB,OAAA;UAAAc,QAAA,GAAG,YAAU,EAACJ,IAAI,CAACc,QAAQ,IAAI,iBAAiB;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAL9CR,IAAI,CAACe,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAjCQD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}