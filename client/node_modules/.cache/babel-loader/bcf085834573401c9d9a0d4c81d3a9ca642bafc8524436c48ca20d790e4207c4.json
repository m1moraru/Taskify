{"ast":null,"code":"var _jsxFileName = \"/Users/mariusiulianmoraru/taskify/client/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // Store user data\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage authentication status\n\n  // Fetch user data from the backend\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/users/me', {\n        withCredentials: true // Ensure cookies are sent for authentication\n      });\n      setUser(response.data);\n      setIsLoggedIn(true); // Update login status\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      setUser(null);\n      setIsLoggedIn(false); // Reset login status\n    }\n  };\n  useEffect(() => {\n    fetchUser(); // Fetch user data on component mount\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/users/login', credentials, {\n        withCredentials: true // Send cookies for authentication\n      });\n      setUser(response.data);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setIsLoggedIn(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/users/logout', {}, {\n        withCredentials: true // Ensure cookies are cleared\n      });\n      setUser(null);\n      setIsLoggedIn(false);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"4bYv/j5yOMazbJb4xFyUTJyGHFM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoggedIn","setIsLoggedIn","fetchUser","response","get","withCredentials","data","error","console","login","credentials","post","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariusiulianmoraru/taskify/client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Store user data\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage authentication status\n\n  // Fetch user data from the backend\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/users/me', {\n        withCredentials: true, // Ensure cookies are sent for authentication\n      });\n      setUser(response.data);\n      setIsLoggedIn(true); // Update login status\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      setUser(null);\n      setIsLoggedIn(false); // Reset login status\n    }\n  };\n\n  useEffect(() => {\n    fetchUser(); // Fetch user data on component mount\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/users/login', credentials, {\n        withCredentials: true, // Send cookies for authentication\n      });\n      setUser(response.data);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setIsLoggedIn(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/users/logout', {}, {\n        withCredentials: true, // Ensure cookies are cleared\n      });\n      setUser(null);\n      setIsLoggedIn(false);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD;EACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoC,EAAE;QACrEC,eAAe,EAAE,IAAI,CAAE;MACzB,CAAC,CAAC;MACFN,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;MACtBL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CR,OAAO,CAAC,IAAI,CAAC;MACbE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMZ,KAAK,CAACoB,IAAI,CAAC,uCAAuC,EAAED,WAAW,EAAE;QACtFL,eAAe,EAAE,IAAI,CAAE;MACzB,CAAC,CAAC;MACFN,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;MACtBL,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMrB,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAAE,CAAC,CAAC,EAAE;QAC7DN,eAAe,EAAE,IAAI,CAAE;MACzB,CAAC,CAAC;MACFN,OAAO,CAAC,IAAI,CAAC;MACbE,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEE,UAAU;MAAES,KAAK;MAAEG;IAAO,CAAE;IAAAhB,QAAA,EAC9DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CArDWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}