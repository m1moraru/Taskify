{"ast":null,"code":"var _jsxFileName = \"/Users/mariusiulianmoraru/taskify/client/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Handle task updates\n  const updateTask = async (id, updatedFields) => {\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${id}`, updatedFields);\n      fetchTasks(); // Refresh tasks after updating\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Toggle task completion\n  const toggleCompletion = task => {\n    updateTask(task.id, {\n      status: task.status === 'Completed' ? 'To-Do' : 'Completed'\n    });\n  };\n\n  // Edit priority\n  const changePriority = (task, newPriority) => {\n    updateTask(task.id, {\n      priority: newPriority\n    });\n  };\n\n  // Edit deadline\n  const changeDeadline = (task, newDeadline) => {\n    updateTask(task.id, {\n      deadline: newDeadline\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: task.priority,\n            onChange: e => changePriority(task, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCompletion(task),\n            children: task.status === 'Completed' ? 'Mark as To-Do' : 'Mark as Completed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: task.deadline || '',\n            onChange: e => changeDeadline(task, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","response","get","data","error","console","updateTask","id","updatedFields","put","toggleCompletion","task","status","changePriority","newPriority","priority","changeDeadline","newDeadline","deadline","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","value","onChange","e","target","onClick","type","_c","$RefreshReg$"],"sources":["/Users/mariusiulianmoraru/taskify/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Handle task updates\n  const updateTask = async (id, updatedFields) => {\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${id}`, updatedFields);\n      fetchTasks(); // Refresh tasks after updating\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Toggle task completion\n  const toggleCompletion = (task) => {\n    updateTask(task.id, { status: task.status === 'Completed' ? 'To-Do' : 'Completed' });\n  };\n\n  // Edit priority\n  const changePriority = (task, newPriority) => {\n    updateTask(task.id, { priority: newPriority });\n  };\n\n  // Edit deadline\n  const changeDeadline = (task, newDeadline) => {\n    updateTask(task.id, { deadline: newDeadline });\n  };\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n            <p>\n              Priority: \n              <select\n                value={task.priority}\n                onChange={(e) => changePriority(task, e.target.value)}\n              >\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n            </p>\n            <p>\n              Status: \n              <p>{}</p>\n              <button onClick={() => toggleCompletion(task)}>\n                {task.status === 'Completed' ? 'Mark as To-Do' : 'Mark as Completed'}\n              </button>\n            </p>\n            <p>\n              Deadline: \n              <input\n                type=\"date\"\n                value={task.deadline || ''}\n                onChange={(e) => changeDeadline(task, e.target.value)}\n              />\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}